NAME: tuf-1679797897
LAST DEPLOYED: Sun Mar 26 02:31:37 2023
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
deployment:
  imagePullPolicy: IfNotPresent
  name: tuf
  port: 8080
  registry: ghcr.io
  replicas: 1
  repository: sigstore/scaffolding/server
  version: sha256:719ea3fe44c52af5a5fedab2168429872e37e97b9f063977fc164d60a5a14b53
enabled: true
forceNamespace: ""
fullnameOverride: tuf
imagePullSecrets: []
ingress:
  annotations: {}
  className: nginx
  http:
    hosts:
    - host: tuf.localhost
      path: /
  name: tuf-server
namespace:
  create: false
  name: fulcio-system
roleBindingName: tuf
roleName: tuf
secrets:
  ctlog:
    create: false
    key: public
    name: ctlog-public-key
    path: ctlog-pubkey
  fulcio:
    create: false
    key: cert
    name: fulcio-server-secret
    path: fulcio-cert
  rekor:
    create: false
    key: key
    name: rekor-public-key
    path: rekor-pubkey
service:
  name: tuf-server
  port: 80
serviceAccountName: tuf

HOOKS:
MANIFEST:
---
# Source: tuf/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tuf
  namespace: default
---
# Source: tuf/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tuf
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "update"]
---
# Source: tuf/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tuf
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tuf
subjects:
  - kind: ServiceAccount
    name: tuf
---
# Source: tuf/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tuf-server
  namespace: default
spec:
  ports:
  - name: 8080-tcp
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/component: "tuf"
    app.kubernetes.io/name: tuf
    app.kubernetes.io/instance: tuf-1679797897
  type: ClusterIP
---
# Source: tuf/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tuf-1679797897-tuf
  namespace: default
  labels:
    helm.sh/chart: tuf-0.1.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "tuf"
    app.kubernetes.io/name: tuf
    app.kubernetes.io/instance: tuf-1679797897

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: "tuf"
      app.kubernetes.io/name: tuf
      app.kubernetes.io/instance: tuf-1679797897
  template:
    metadata:
      labels:
        helm.sh/chart: tuf-0.1.4
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: "tuf"
        app.kubernetes.io/name: tuf
        app.kubernetes.io/instance: tuf-1679797897
    spec:
      serviceAccountName: tuf
      containers:
      - image: ghcr.io/sigstore/scaffolding/server@sha256:719ea3fe44c52af5a5fedab2168429872e37e97b9f063977fc164d60a5a14b53
        name: tuf
        ports:
          - containerPort: 8080
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

        volumeMounts:
          - name: tuf-secrets
            mountPath: "/var/run/tuf-secrets"
            readOnly: true
      volumes:
      - name: tuf-secrets
        projected:
          sources: 
          - secret:
              name: ctlog-public-key
              items:
              - key: public
                path: ctlog-pubkey
          - secret:
              name: fulcio-server-secret
              items:
              - key: cert
                path: fulcio-cert
          - secret:
              name: rekor-public-key
              items:
              - key: key
                path: rekor-pubkey
---
# Source: tuf/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tuf-server
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - host: "tuf.localhost"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: tuf-server
                port:
                  number: 80
